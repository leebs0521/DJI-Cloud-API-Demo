package com.dji.sdk.cloudapi.device;

import com.dji.sdk.exception.CloudSDKException;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.Arrays;

/**
 * 셔터 속도 열거형 클래스
 * 
 * 이 클래스는 카메라의 셔터 속도를 정의합니다.
 * 다양한 셔터 속도 값을 통해 카메라의 노출 시간을 조절합니다.
 * 
 * @author sean
 * @version 1.9
 * @date 2023/12/12
 */
public enum ShutterSpeedEnum {

    /**
     * 1/8000초 (값: 0)
     */
    _1_8000TH_S(0),

    /**
     * 1/6400초 (값: 1)
     */
    _1_6400TH_S(1),

    /**
     * 1/6000초 (값: 2)
     */
    _1_6000TH_S(2),

    /**
     * 1/5000초 (값: 3)
     */
    _1_5000TH_S(3),

    /**
     * 1/4000초 (값: 4)
     */
    _1_4000TH_S(4),

    /**
     * 1/3200초 (값: 5)
     */
    _1_3200TH_S(5),

    /**
     * 1/3000초 (값: 6)
     */
    _1_3000TH_S(6),

    /**
     * 1/2500초 (값: 7)
     */
    _1_2500TH_S(7),

    /**
     * 1/2000초 (값: 8)
     */
    _1_2000TH_S(8),

    /**
     * 1/1600초 (값: 9)
     */
    _1_1600TH_S(9),

    /**
     * 1/1500초 (값: 10)
     */
    _1_1500TH_S(10),

    /**
     * 1/1250초 (값: 11)
     */
    _1_1250TH_S(11),

    /**
     * 1/1000초 (값: 12)
     */
    _1_1000TH_S(12),

    /**
     * 1/800초 (값: 13)
     */
    _1_800TH_S(13),

    /**
     * 1/725초 (값: 14)
     */
    _1_725TH_S(14),

    /**
     * 1/640초 (값: 15)
     */
    _1_640TH_S(15),

    /**
     * 1/500초 (값: 16)
     */
    _1_500TH_S(16),

    /**
     * 1/400초 (값: 17)
     */
    _1_400TH_S(17),

    /**
     * 1/350초 (값: 18)
     */
    _1_350TH_S(18),

    /**
     * 1/320초 (값: 19)
     */
    _1_320TH_S(19),

    /**
     * 1/250초 (값: 20)
     */
    _1_250TH_S(20),

    /**
     * 1/240초 (값: 21)
     */
    _1_240TH_S(21),

    /**
     * 1/200초 (값: 22)
     */
    _1_200TH_S(22),

    /**
     * 1/180초 (값: 23)
     */
    _1_180TH_S(23),

    /**
     * 1/160초 (값: 24)
     */
    _1_160TH_S(24),

    /**
     * 1/125초 (값: 25)
     */
    _1_125TH_S(25),

    /**
     * 1/120초 (값: 26)
     */
    _1_120TH_S(26),

    /**
     * 1/100초 (값: 27)
     */
    _1_100TH_S(27),

    /**
     * 1/90초 (값: 28)
     */
    _1_90TH_S(28),

    /**
     * 1/80초 (값: 29)
     */
    _1_80TH_S(29),

    /**
     * 1/60초 (값: 30)
     */
    _1_60TH_S(30),

    /**
     * 1/50초 (값: 31)
     */
    _1_50TH_S(31),

    /**
     * 1/40초 (값: 32)
     */
    _1_40TH_S(32),

    /**
     * 1/30초 (값: 33)
     */
    _1_30TH_S(33),

    /**
     * 1/25초 (값: 34)
     */
    _1_25TH_S(34),

    /**
     * 1/20초 (값: 35)
     */
    _1_20TH_S(35),

    /**
     * 1/15초 (값: 36)
     */
    _1_15TH_S(36),

    /**
     * 2/25초 (값: 37)
     */
    _2_25THS_S(37),

    /**
     * 1/10초 (값: 38)
     */
    _1_10TH_S(38),

    /**
     * 1/8초 (값: 39)
     */
    _1_8TH_S(39),

    /**
     * 4/25초 (값: 40)
     */
    _4_25THS_S(40),

    /**
     * 1/5초 (값: 41)
     */
    _1_5TH_S(41),

    /**
     * 1/4초 (값: 42)
     */
    _1_4TH_S(42),

    /**
     * 1/3초 (값: 43)
     */
    _1_3TH_S(43),

    /**
     * 2/5초 (값: 44)
     */
    _2_5THS_S(44),

    /**
     * 1/2초 (값: 45)
     */
    _1_2TH_S(45),

    /**
     * 3/5초 (값: 46)
     */
    _3_5THS_S(46),

    /**
     * 4/5초 (값: 47)
     */
    _4_5TH_S(47),

    /**
     * 1초 (값: 48)
     */
    _1S(48),

    /**
     * 1.3초 (값: 49)
     */
    _1_DOT_3S(49),

    /**
     * 1.6초 (값: 50)
     */
    _1_DOT_6_S(50),

    /**
     * 2초 (값: 51)
     */
    _2_S(51),

    /**
     * 2.5초 (값: 52)
     */
    _2_DOT_5_S(52),

    /**
     * 3초 (값: 53)
     */
    _3_DOT_S(53),

    /**
     * 3.2초 (값: 54)
     */
    _3_DOT_2_S(54),

    /**
     * 4초 (값: 55)
     */
    _4_DOT_S(55),

    /**
     * 5초 (값: 56)
     */
    _5_DOT_S(56),

    /**
     * 6초 (값: 57)
     */
    _6_DOT_S(57),

    /**
     * 7초 (값: 58)
     */
    _7_DOT_S(58),

    /**
     * 8초 (값: 59)
     */
    _8_DOT_S(59),

    /**
     * 자동 (값: 65534)
     */
    AUTO(65534),

    ;

    /**
     * 셔터 속도 정수값
     */
    private final int speed;

    /**
     * 셔터 속도 열거형 생성자
     * 
     * @param speed 셔터 속도 정수값
     */
    ShutterSpeedEnum(int speed) {
        this.speed = speed;
    }

    /**
     * 셔터 속도 정수값을 반환합니다.
     * 
     * @return 셔터 속도 정수값
     */
    @JsonValue
    public int getSpeed() {
        return speed;
    }

    /**
     * 정수값으로 셔터 속도를 찾습니다.
     * 
     * @param speed 찾을 셔터 속도 정수값
     * @return 찾은 셔터 속도 열거형
     * @throws CloudSDKException 해당하는 셔터 속도를 찾을 수 없는 경우
     */
    @JsonCreator
    public static ShutterSpeedEnum find(int speed) {
        return Arrays.stream(values()).filter(speedEnum -> speedEnum.speed == speed).findAny()
            .orElseThrow(() -> new CloudSDKException(ShutterSpeedEnum.class, speed));
    }

}
